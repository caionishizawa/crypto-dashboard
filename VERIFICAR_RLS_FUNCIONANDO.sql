-- VERIFICA√á√ÉO FINAL DA RLS FUNCIONANDO
-- Este script verifica se tudo est√° funcionando corretamente

-- 1. Verificar status da tabela
SELECT 
  'üìä Status da Tabela:' as secao,
  schemaname,
  tablename,
  CASE 
    WHEN rowsecurity THEN '‚úÖ RLS HABILITADO'
    ELSE '‚ùå RLS DESABILITADO'
  END as rls_status
FROM pg_tables 
WHERE tablename = 'solicitacoes_usuarios';

-- 2. Listar todas as pol√≠ticas ativas
SELECT 
  'üîê Pol√≠ticas Ativas:' as secao,
  policyname,
  CASE 
    WHEN permissive THEN 'PERMISSIVA'
    ELSE 'RESTRITIVA'
  END as tipo,
  roles,
  cmd as operacao
FROM pg_policies 
WHERE tablename = 'solicitacoes_usuarios'
ORDER BY policyname;

-- 3. Verificar dados existentes
SELECT 
  'üìã Dados Existentes:' as secao,
  COUNT(*) as total_solicitacoes,
  COUNT(CASE WHEN status = 'pendente' THEN 1 END) as pendentes,
  COUNT(CASE WHEN status = 'aprovado' THEN 1 END) as aprovadas,
  COUNT(CASE WHEN status = 'rejeitado' THEN 1 END) as rejeitadas
FROM solicitacoes_usuarios;

-- 4. Verificar estrutura da tabela
SELECT 
  'üèóÔ∏è Estrutura da Tabela:' as secao,
  column_name,
  data_type,
  is_nullable,
  column_default
FROM information_schema.columns 
WHERE table_name = 'solicitacoes_usuarios'
ORDER BY ordinal_position;

-- 5. Verificar √≠ndices
SELECT 
  'üìà √çndices:' as secao,
  indexname,
  indexdef
FROM pg_indexes 
WHERE tablename = 'solicitacoes_usuarios';

-- 6. Teste de inser√ß√£o an√¥nima (simulado)
SELECT 
  'üß™ Teste de Inser√ß√£o An√¥nima:' as secao,
  'Para testar, execute no frontend:' as instrucao,
  'apiClient.solicitarCadastro({nome, email, senha})' as comando;

-- 7. Verificar permiss√µes de usu√°rios
SELECT 
  'üë• Permiss√µes de Usu√°rios:' as secao,
  'Admin: Pode ver, atualizar e deletar todas as solicita√ß√µes' as admin_perms,
  'Usu√°rio: Pode ver apenas suas pr√≥prias solicita√ß√µes' as user_perms,
  'An√¥nimo: Pode inserir novas solicita√ß√µes' as anon_perms;

-- 8. Resumo final
SELECT 
  'üéØ RESUMO FINAL:' as secao,
  CASE 
    WHEN EXISTS (
      SELECT 1 FROM pg_tables 
      WHERE tablename = 'solicitacoes_usuarios' 
      AND rowsecurity = true
    ) THEN '‚úÖ RLS HABILITADO'
    ELSE '‚ùå RLS DESABILITADO'
  END as rls_status,
  CASE 
    WHEN EXISTS (
      SELECT 1 FROM pg_policies 
      WHERE tablename = 'solicitacoes_usuarios'
    ) THEN '‚úÖ POL√çTICAS CONFIGURADAS'
    ELSE '‚ùå SEM POL√çTICAS'
  END as policies_status,
  CASE 
    WHEN EXISTS (
      SELECT 1 FROM pg_policies 
      WHERE tablename = 'solicitacoes_usuarios'
      AND cmd = 'INSERT'
      AND roles = '{anon}'
    ) THEN '‚úÖ INSER√á√ÉO AN√îNIMA PERMITIDA'
    ELSE '‚ùå INSER√á√ÉO AN√îNIMA BLOQUEADA'
  END as anon_insert_status;

-- 9. Instru√ß√µes para teste manual
SELECT 
  'üìù PR√ìXIMOS PASSOS:' as secao,
  '1. Execute este script no Supabase SQL Editor' as passo1,
  '2. Verifique se RLS est√° habilitado' as passo2,
  '3. Teste cadastro de novo usu√°rio no frontend' as passo3,
  '4. Verifique se aparece na tabela solicitacoes_usuarios' as passo4,
  '5. Aprove o usu√°rio como admin' as passo5,
  '6. Teste login com senha original' as passo6;
